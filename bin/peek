#!/usr/bin/env bash

## An upgrade to filer
## Because I'm bored and sometimes have OCD
## Already added to zshrc, this is only for backup

urlregex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
OPENER="xdg-open"
DEBUG="OFF"

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -o|--opener)
            OPENER="$2"
            shift # past value
            shift # past value
            ;;
        -d|--debug)
            DEBUG="ON"
            shift # past value
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters


if [[ -n "$@" ]]; then
    FILES="$@"
else
    ## Space separated
    # read -r FILES

    ## Newline separated, becuase fzf pipes
    FILES=()
    while read -r line; do
        # echo "> $line"
        FILES+=( "$line" )
    done
fi

open()
{
    nohup "$@" > /dev/null 2>&1 & disown
}

guiopen()
{
    nohup "$OPENER" "$@" >/dev/null 2>&1 & disown
}

switch()
{

    FILE="$@"
    FILEBASENAME=$(basename "$FILE")
    [[ "$FILEBASENAME" =~ "." ]] && EXT=${FILEBASENAME##*.} || EXT=""
    FILETYPE="$(file --mime-type "$FILE" | awk -F ': ' '{print $2}')"

    if [[ "$DEBUG" == "ON" ]]; then 
        echo "file=$FILE"
        echo "filebasename=$FILEBASENAME"
        echo "ext=$EXT"
        echo "c[0]=${FILEBASENAME:0:1}"
        echo "filetype=$FILETYPE"
        echo "------------------"
    fi

    case "$FILETYPE" in 
        "inode/directory"         ) builtin cd "$FILE"            ; return ;;
        "inode/symlink"           ) switch "$(readlink -f $FILE)" ; return ;;
        "inode/x-empty"           ) $EDITOR "$FILE"               ; return ;;
        "application/octet-stream") dex -e "$FILE"                ; return ;;
        "text/html"               ) guiopen "$FILE"               ; return ;;
        "application/pdf"         ) guiopen "$FILE"               ; return ;;
        "application/json"        ) $EDITOR "$FILE"               ; return ;;
        "text/plain"              ) $EDITOR "$FILE"               ; return ;;
        *                         ) ;;
    esac

    if [[ "$FILETYPE" == *"text"* ]]; then
        $EDITOR "$FILE" && return 
    elif [[ "$FILE" =~ $urlregex ]]; then
        if [[ "$FILE" =~ "youtube" ]]; then
            open mpv "$FILE"
        else
            guiopen "$FILE"
        fi
    fi

}

for FILE in "${FILES[@]}"; do
    switch "$FILE"
done
