#!/bin/bash

##      __                                    
##     / _|_   _ _______  ___ ___  _ __   ___ 
##    | |_| | | |_  / __|/ __/ _ \| '_ \ / _ \
##    |  _| |_| |/ /\__ \ (_| (_) | |_) |  __/
##    |_|  \__,_/___|___/\___\___/| .__/ \___|
##                                |_|         



# fzf -d '\t'  --preview="scope.sh {q} {..-2}" --preview-window up:75% -1 --expect=ctrl-o,ctrl-e --query="$@" -0 --bind "ctrl-space:execute@nohup xdg-open {..-2} > /dev/null 2>&1@"

# QUERY=""
# if [[ ! -z "$@" ]]; then
# 	QUERY="$@"
# fi

# if [[ ! -z "$@" ]]; then
# 	QUERY="$@"
# else
#     QUERY=""
# fi


# fzf  -0 -1 -e -d $'\t'  --preview="scope.sh {q} {1}" --preview-window up:75% "$" --expect=ctrl-e --bind "ctrl-space:execute@nohup xdg-open {$1} >/dev/null 2>&1 & disown@,ctrl-o:execute@nohup okular {$1} >/dev/null 2>&1 & disown@,ctrl-l:execute@nohup polar-bookshelf {$1} >/dev/null 2>&1 & disown@" \

# CMD='fzf -0 -1 -e -d $"\t" --preview="scope.sh {q} {1}" --preview-window up:75% --expect=ctrl-e '"$@"' --bind "ctrl-space:execute@nohup xdg-open {1} >/dev/null 2>&1 & disown@,ctrl-o:execute@nohup okular {1} >/dev/null 2>&1 & disown@,ctrl-u:execute@nvim +Goyo {1}@,ctrl-l:execute@nohup polar-bookshelf {$1} >/dev/null 2>&1 & disown@"'


## TODO: Move to zc

# CMD='fzf -0 -1 -e -d "\t" --preview="scope.sh {q} {1}" --preview-window up:75% --expect=ctrl-e,ctrl-b '"$@"' --bind "ctrl-space:execute@nohup xdg-open {1} >/dev/null 2>&1 & disown@,ctrl-y:execute@echo {1} | xclip -i -selection clipboard@,ctrl-x:execute@nohup xdg-open {1} >/dev/null 2>&1 & disown@"'
# eval "$CMD"

## [TASK]: Cleanup and use args/flags etc
## -b to append base directory
## flag to switch off the --expect output (first line showing key)

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -b|--base-directory)
            ## Basically to compensate for fd --base-directory
            ## TODO: This breaks scope.sh
            BASEDIR="$2/"
            shift # past value
            shift # past value
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

fzf -0 -m -e -d $"\t" --preview="scope.sh {q} $BASEDIR{1}" --preview-window up:60% "$@" --bind "ctrl-space:execute@nohup xdg-open {1} >/dev/null 2>&1 & disown@,ctrl-y:execute@echo {1} | xclip -i -selection clipboard@,ctrl-x:execute@nohup xdg-open {1} >/dev/null 2>&1 & disown@" | sed "s@^@$BASEDIR@g"
