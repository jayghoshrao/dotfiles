#!/usr/bin/env bash

## Run a command within each subdirectory
## Usage: fordir pwd

ROOT=$PWD
PARALLEL=0
# EXPR='*/'
EXPR='.*'
MAXDEPTH_FLAG="-d 1" # Default only top-level
FDFIND_ARGS=""

## Commandline args processing
POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -p|--parallel)
            PARALLEL=1
            shift # past value
            ;;
        -e|--expr|--expression)
            EXPR="$2"
            shift # past value
            shift # past value
            ;;
        -r|--recurse)
            MAXDEPTH_FLAG=
            shift
            ;;
        -f|--full-path) # apply regex to full path
            FDFIND_ARGS="${FDFIND_ARGS} --full-path"
            shift
            ;;
        -g|--glob) # apply regex to full path
            FDFIND_ARGS="${FDFIND_ARGS} --glob"
            shift
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# DIRS=($(eval "echo ${EXPR}"))
DIRS=($(fd "${EXPR}" --type d $MAXDEPTH_FLAG $FDFIND_ARGS))

for DIR in "${DIRS[@]}"; do
    cd $DIR
    allcmds=$(echo "$@" | sed  "s|DIR|$DIR|g" | sed "s|ROOT|$ROOT|g")
    IFS=';' read -ra cmdarray <<< "$allcmds"
    for cmd in "${cmdarray[@]}"; do
        if [[ $PARALLEL == 0 ]]; then
            eval "$cmd"
        else
            if [[ $(echo "$cmd" | awk '{print $1}') == 'cd' ]]; then
                eval "$cmd"
            else
                eval nohup "$cmd" >out.log 2>&1 &
            fi
        fi
    done
    cd $ROOT
done

wait
