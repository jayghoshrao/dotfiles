#!/usr/bin/env bash

set -euo pipefail

die(){
    echo -e "ERROR: $@" >&2
    exit -1
}

print(){
    printf "%s\n" "$@"
}

BRANCH=
TAG=
RELEASE=0
VERBOSE=0

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -b|--branch)
            BRANCH="$2"; shift 2 ;;
        -t|--tag)
            TAG="$2"; shift 2 ;;
        -v|--verbose)
            VERBOSE=1; shift ;;
        -r|--release)
            RELEASE=1; shift ;;
        *)
            POSITIONAL+=("$1"); shift ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

[ $# -lt 2 ] && die "Not enough arguments."

OWNER="${1}"
REPO="${2}"
REV=

# # Release assets
# if [ $RELEASE = 1 ]; then
#     RELEASE_ID=$(curl -fsSl "https://api.github.com/repos/$OWNER/$REPO/releases" | jq -r '.[] | "\(.id) \(.tag_name)" ' | fzf --preview '' | awk '{print $1}')
#     curl -fsSl "https://api.github.com/repos/$OWNER/$REPO/releases/$RELEASE_ID/assets" | jq -r '.[] | "\(.id) \(.name)"'
#     # https://api.github.com/repos/OWNER/REPO/releases/assets/ASSET_ID
#     exit
# fi

if [ -z "$BRANCH" ] && [ -z "$TAG" ]; then 
    TAG=$(curl -fsSl "https://api.github.com/repos/$OWNER/$REPO/releases" | jq -r '.[] | .tag_name' | fzf --preview '' -p "Release Tag")
fi

[ -z "$BRANCH" ] && [ -z "$TAG" ] &&  die "Either branch or tag must be specified!"

if [ -n "$BRANCH" ]; then 
    REV=$(curl -fsSl "https://api.github.com/repos/$OWNER/$REPO/branches/$BRANCH" | jq -r '.commit.sha')
elif [ -n "$TAG" ]; then
    REV=$(curl -fsSl "https://api.github.com/repos/$OWNER/$REPO/git/ref/tags/$TAG" | jq -r '.object.sha')
fi

[ -z "$REV" ] && die "No revision found!"

URL="https://github.com/$OWNER/$REPO/archive/$REV.tar.gz"

[ $VERBOSE = 1 ] && print "URL: $URL"

# NIX-PREFETCH-URL generates a hash that can be separately calculated as:
# nix-hash --type sha256 --base32 <unpacked_directory>
NIX_PREFETCH_OUT=$(nix-prefetch-url --unpack --print-path "$URL")

[ $VERBOSE = 1 ] && print "$NIX_PREFETCH_OUT"

readarray -t SHA_PATH <<< "$NIX_PREFETCH_OUT"

echo -e "url = \"$URL\";\n\
rev = \"$REV\";\n\
sha256 = \"${SHA_PATH[0]}\";" | tee >(xclip -i -selection c)
