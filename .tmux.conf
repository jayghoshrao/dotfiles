# -------------------- Theme --------------------
# # Nord
# set -g @plugin 'arcticicestudio/nord-tmux'

# catppuccin
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_powerline_icons_theme_enabled on
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator ""
set -g @catppuccin_status_left_separator ""
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_window_tabs_enabled on # or off to disable window_tabs
# set -g @catppuccin_window_number_position "right"
# -----------------------------------------------


# see also: https://github.com/rjmccabe3701/linux_config/blob/master/tmux_fixups.sh
# unbind-key -a
set -g default-terminal 'xterm-256color-italic'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set-option -g status-position top

## Allows tmux to update the following env vars from the current login shell
## Unfortunately doesn't update the env vars in open panes, only newly created ones
set-option -g update-environment "SSH_AUTH_SOCK \
                                  SSH_CONNECTION \
                                  DISPLAY"

## One possible fix for the above problem. See tmux_update_display() in .zshrc for the other one
# set-hook -g client-attached 'run-shell ~/.tmux/update_display.sh'

# Set prefix to Ctrl-Space instead of Ctrl-b
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Split windows using | and -
unbind '"'
unbind %
bind-key h split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"
# bind-key c new-window -ac "#{pane_current_path}"
bind C new-window -c "#{pane_current_path}"

# Mouse mode
set -g mouse on

# Update window title
set -g set-titles on		
set -g set-titles-string "tmux: #{window_index}/#{session_windows}:#T" # Terminal title bar

set -g automatic-rename on
# set -g automatic-rename-format "#{=/20/...:pane_title}" # tmux window title
# set -g automatic-rename-format "#{?pane_current_command,#{b:pane_current_path}:#{pane_current_command},#{pane_current_command}}"
set -g automatic-rename-format "#{b:pane_current_path}:#{pane_current_command}"

# set -g automatic-rename-format "#T" # tmux window title
# set -g automatic-rename-format "#{pane_current_command}" # tmux window title

# Use vi keys
set -gw mode-keys vi

# # enable activity alerts
# setw -g monitor-activity on
# set -g visual-activity on

# Center the window list
set -g status-justify centre

# Key bindings
bind C-d detach			# the same as d so you don't have to depress Ctrl
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."
bind C-Space last-window
bind C-c command-prompt -p command: "new-window -n '%1' '%1'"

bind -r < swap-window -t -1 \; select-window -t -1
bind -r > swap-window -t +1 \; select-window -t +1

# Pane movement
# http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
bind-key j command-prompt -p "join pane from window:"  "join-pane -h -s ':%%'"
bind-key s command-prompt -p "send pane to window:"  "join-pane -h -t ':%%'"
bind-key S command-prompt -p "break pane to window:"  "break-pane -t ':%%'"

# bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iqE 'vim\|EDITOR\|^v$\|^fl$\|^vl ' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iqE 'vim\|EDITOR\|^v$\|^fl$\|^vl ' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iqE 'vim\|EDITOR\|^v$\|^fl$\|^vl ' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iqE 'vim\|EDITOR\|^v$\|^fl$\|^vl ' && tmux send-keys C-l) || tmux select-pane -R"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# See: https://github.com/alexghergh/nvim-tmux-navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# bind C-e run "tmux display-message -p '#{pane_title}'"  # Test

# bind -n C-K previous-window
# bind -n C-J next-window

# Pane resizing.
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

# unbind-key C-n
# unbind-key C-m
# bind -n C-n previous-window
# bind -n C-m next-window

bind C-t next-layout

# Don't show window's current name while renaming
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"


set -g renumber-windows on                  # renumber windows sequentially after closing any of them
set -g base-index 1                         # start window numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1                   # start pane numbers at 1 to match keyboard order with tmux order

# displays "prefix" (in red) in statusline when prefix is pressed
# set -g status-left "#[bg=red]#{s/root//:client_key_table}"

# view current pane history (including colors) with "less" in new window
bind-key u capture-pane -S - -E - -e -b lesshist \; new-window -n "history" 'tmux show-buffer -b lesshist| less -R +G'

# bind-key -T copy-mode-vi Enter send-keys -X copy-selection \; run-shell "tmux show-buffer | xsel -ib"
bind-key -T copy-mode-vi Enter send-keys -X copy-selection \; run-shell "tmux show-buffer | xclip -i -selection clipboard"
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Site-specific config
# source-file ~/.tmux.conf.local

## RUN: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'

# # Resurrect pane contents. 
# # Note: default-command in tmux must not contain && or ||
set -g @resurrect-capture-pane-contents 'on'

# # # for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# set -g @continuum-restore 'on'
set -g status-right 'Continuum status: #{continuum_status}'

# More layout control options for panes
bind M-f move-pane -t '.-'
bind M-r move-pane -h -t '.-'

# TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command}"

## Fuzzy switch sessions
# bind o new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind o new-window -n "session-switcher" "tm"

## Open session by name
bind-key O command-prompt -p "Session:" "new-session -As '%%'"

# Switch to last session
bind-key b switch-client -l

# Switch to specific pane
bind t new-window -n "pane-switcher" "tp -w"


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
